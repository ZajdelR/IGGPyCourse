Traceback (most recent call last):
  File "C:\Users\UPWr\AppData\Roaming\Python\Python311\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\ProgramData\anaconda3\Lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\anaconda3\Lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\anaconda3\Lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\ProgramData\anaconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\ProgramData\anaconda3\Lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\ProgramData\anaconda3\Lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\ProgramData\anaconda3\Lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
%run ./tmp/argparse_divide.py --dividend 42 --divisor "two"
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mValueError[0m                                Traceback (most recent call last)
File [1;32mC:\ProgramData\anaconda3\Lib\argparse.py:2529[0m, in [0;36mArgumentParser._get_value[1;34m(self, action, arg_string)[0m
[0;32m   2528[0m [38;5;28;01mtry[39;00m:
[1;32m-> 2529[0m     result [38;5;241m=[39m type_func(arg_string)
[0;32m   2531[0m [38;5;66;03m# ArgumentTypeErrors indicate errors[39;00m

[1;31mValueError[0m: invalid literal for int() with base 10: 'two'

During handling of the above exception, another exception occurred:

[1;31mArgumentError[0m                             Traceback (most recent call last)
File [1;32mC:\ProgramData\anaconda3\Lib\argparse.py:1902[0m, in [0;36mArgumentParser.parse_known_args[1;34m(self, args, namespace)[0m
[0;32m   1901[0m [38;5;28;01mtry[39;00m:
[1;32m-> 1902[0m     namespace, args [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_parse_known_args(args, namespace)
[0;32m   1903[0m [38;5;28;01mexcept[39;00m ArgumentError [38;5;28;01mas[39;00m err:

File [1;32mC:\ProgramData\anaconda3\Lib\argparse.py:2114[0m, in [0;36mArgumentParser._parse_known_args[1;34m(self, arg_strings, namespace)[0m
[0;32m   2113[0m     [38;5;66;03m# consume the next optional and any arguments for it[39;00m
[1;32m-> 2114[0m     start_index [38;5;241m=[39m consume_optional(start_index)
[0;32m   2116[0m [38;5;66;03m# consume any positionals following the last Optional[39;00m

File [1;32mC:\ProgramData\anaconda3\Lib\argparse.py:2054[0m, in [0;36mArgumentParser._parse_known_args.<locals>.consume_optional[1;34m(start_index)[0m
[0;32m   2053[0m [38;5;28;01mfor[39;00m action, args, option_string [38;5;129;01min[39;00m action_tuples:
[1;32m-> 2054[0m     take_action(action, args, option_string)
[0;32m   2055[0m [38;5;28;01mreturn[39;00m stop

File [1;32mC:\ProgramData\anaconda3\Lib\argparse.py:1962[0m, in [0;36mArgumentParser._parse_known_args.<locals>.take_action[1;34m(action, argument_strings, option_string)[0m
[0;32m   1961[0m seen_actions[38;5;241m.[39madd(action)
[1;32m-> 1962[0m argument_values [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_values(action, argument_strings)
[0;32m   1964[0m [38;5;66;03m# error if this argument is not allowed with other previously[39;00m
[0;32m   1965[0m [38;5;66;03m# seen arguments, assuming that actions that use the default[39;00m
[0;32m   1966[0m [38;5;66;03m# value don't really count as "present"[39;00m

File [1;32mC:\ProgramData\anaconda3\Lib\argparse.py:2496[0m, in [0;36mArgumentParser._get_values[1;34m(self, action, arg_strings)[0m
[0;32m   2495[0m arg_string, [38;5;241m=[39m arg_strings
[1;32m-> 2496[0m value [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_value(action, arg_string)
[0;32m   2497[0m [38;5;28mself[39m[38;5;241m.[39m_check_value(action, value)

File [1;32mC:\ProgramData\anaconda3\Lib\argparse.py:2542[0m, in [0;36mArgumentParser._get_value[1;34m(self, action, arg_string)[0m
[0;32m   2541[0m     msg [38;5;241m=[39m _([38;5;124m'[39m[38;5;124minvalid [39m[38;5;132;01m%(type)s[39;00m[38;5;124m value: [39m[38;5;132;01m%(value)r[39;00m[38;5;124m'[39m)
[1;32m-> 2542[0m     [38;5;28;01mraise[39;00m ArgumentError(action, msg [38;5;241m%[39m args)
[0;32m   2544[0m [38;5;66;03m# return the converted value[39;00m

[1;31mArgumentError[0m: argument --divisor: invalid int value: 'two'

During handling of the above exception, another exception occurred:

[1;31mSystemExit[0m                                Traceback (most recent call last)
File [1;32mC:\ProgramData\anaconda3\Lib\site-packages\IPython\core\interactiveshell.py:2863[0m, in [0;36mInteractiveShell.safe_execfile[1;34m(self, fname, exit_ignore, raise_exceptions, shell_futures, *where)[0m
[0;32m   2862[0m     glob, loc [38;5;241m=[39m (where [38;5;241m+[39m ([38;5;28;01mNone[39;00m, ))[:[38;5;241m2[39m]
[1;32m-> 2863[0m     py3compat[38;5;241m.[39mexecfile(
[0;32m   2864[0m         fname, glob, loc,
[0;32m   2865[0m         [38;5;28mself[39m[38;5;241m.[39mcompile [38;5;28;01mif[39;00m shell_futures [38;5;28;01melse[39;00m [38;5;28;01mNone[39;00m)
[0;32m   2866[0m [38;5;28;01mexcept[39;00m [38;5;167;01mSystemExit[39;00m [38;5;28;01mas[39;00m status:
[0;32m   2867[0m     [38;5;66;03m# If the call was made with 0 or None exit status (sys.exit(0)[39;00m
[0;32m   2868[0m     [38;5;66;03m# or sys.exit() ), don't bother showing a traceback, as both of[39;00m
[1;32m   (...)[0m
[0;32m   2874[0m     [38;5;66;03m# For other exit status, we show the exception unless[39;00m
[0;32m   2875[0m     [38;5;66;03m# explicitly silenced, but only in short form.[39;00m

File [1;32mC:\ProgramData\anaconda3\Lib\site-packages\IPython\utils\py3compat.py:55[0m, in [0;36mexecfile[1;34m(fname, glob, loc, compiler)[0m
[0;32m     54[0m compiler [38;5;241m=[39m compiler [38;5;129;01mor[39;00m [38;5;28mcompile[39m
[1;32m---> 55[0m exec(compiler(f[38;5;241m.[39mread(), fname, [38;5;124m"[39m[38;5;124mexec[39m[38;5;124m"[39m), glob, loc)

File [1;32mE:\MATERIALY\IGGPyCourse\IGGPyCourse\tmp\argparse_divide.py:9[0m
[0;32m      7[0m parser[38;5;241m.[39madd_argument([38;5;124m"[39m[38;5;124m--divisor[39m[38;5;124m"[39m, [38;5;28mtype[39m[38;5;241m=[39m[38;5;28mint[39m)
[1;32m----> 9[0m args [38;5;241m=[39m parser[38;5;241m.[39mparse_args()
[0;32m     11[0m [38;5;28mprint[39m(args[38;5;241m.[39mdividend [38;5;241m/[39m args[38;5;241m.[39mdivisor)

File [1;32mC:\ProgramData\anaconda3\Lib\argparse.py:1869[0m, in [0;36mArgumentParser.parse_args[1;34m(self, args, namespace)[0m
[0;32m   1868[0m [38;5;28;01mdef[39;00m [38;5;21mparse_args[39m([38;5;28mself[39m, args[38;5;241m=[39m[38;5;28;01mNone[39;00m, namespace[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[1;32m-> 1869[0m     args, argv [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mparse_known_args(args, namespace)
[0;32m   1870[0m     [38;5;28;01mif[39;00m argv:

File [1;32mC:\ProgramData\anaconda3\Lib\argparse.py:1904[0m, in [0;36mArgumentParser.parse_known_args[1;34m(self, args, namespace)[0m
[0;32m   1903[0m     [38;5;28;01mexcept[39;00m ArgumentError [38;5;28;01mas[39;00m err:
[1;32m-> 1904[0m         [38;5;28mself[39m[38;5;241m.[39merror([38;5;28mstr[39m(err))
[0;32m   1905[0m [38;5;28;01melse[39;00m:

File [1;32mC:\ProgramData\anaconda3\Lib\argparse.py:2628[0m, in [0;36mArgumentParser.error[1;34m(self, message)[0m
[0;32m   2627[0m args [38;5;241m=[39m {[38;5;124m'[39m[38;5;124mprog[39m[38;5;124m'[39m: [38;5;28mself[39m[38;5;241m.[39mprog, [38;5;124m'[39m[38;5;124mmessage[39m[38;5;124m'[39m: message}
[1;32m-> 2628[0m [38;5;28mself[39m[38;5;241m.[39mexit([38;5;241m2[39m, _([38;5;124m'[39m[38;5;132;01m%(prog)s[39;00m[38;5;124m: error: [39m[38;5;132;01m%(message)s[39;00m[38;5;130;01m\n[39;00m[38;5;124m'[39m) [38;5;241m%[39m args)

File [1;32mC:\ProgramData\anaconda3\Lib\argparse.py:2615[0m, in [0;36mArgumentParser.exit[1;34m(self, status, message)[0m
[0;32m   2614[0m     [38;5;28mself[39m[38;5;241m.[39m_print_message(message, _sys[38;5;241m.[39mstderr)
[1;32m-> 2615[0m _sys[38;5;241m.[39mexit(status)

[1;31mSystemExit[0m: 2

During handling of the above exception, another exception occurred:

[1;31mAttributeError[0m                            Traceback (most recent call last)
Cell [1;32mIn[15], line 1[0m
[1;32m----> 1[0m get_ipython()[38;5;241m.[39mrun_line_magic([38;5;124m'[39m[38;5;124mrun[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124m./tmp/argparse_divide.py --dividend 42 --divisor [39m[38;5;124m"[39m[38;5;124mtwo[39m[38;5;124m"[39m[38;5;124m'[39m)

File [1;32mC:\ProgramData\anaconda3\Lib\site-packages\IPython\core\interactiveshell.py:2414[0m, in [0;36mInteractiveShell.run_line_magic[1;34m(self, magic_name, line, _stack_depth)[0m
[0;32m   2412[0m     kwargs[[38;5;124m'[39m[38;5;124mlocal_ns[39m[38;5;124m'[39m] [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget_local_scope(stack_depth)
[0;32m   2413[0m [38;5;28;01mwith[39;00m [38;5;28mself[39m[38;5;241m.[39mbuiltin_trap:
[1;32m-> 2414[0m     result [38;5;241m=[39m fn([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m   2416[0m [38;5;66;03m# The code below prevents the output from being displayed[39;00m
[0;32m   2417[0m [38;5;66;03m# when using magics with decodator @output_can_be_silenced[39;00m
[0;32m   2418[0m [38;5;66;03m# when the last Python token in the expression is a ';'.[39;00m
[0;32m   2419[0m [38;5;28;01mif[39;00m [38;5;28mgetattr[39m(fn, magic[38;5;241m.[39mMAGIC_OUTPUT_CAN_BE_SILENCED, [38;5;28;01mFalse[39;00m):

File [1;32mC:\ProgramData\anaconda3\Lib\site-packages\IPython\core\magics\execution.py:834[0m, in [0;36mExecutionMagics.run[1;34m(self, parameter_s, runner, file_finder)[0m
[0;32m    831[0m             [38;5;28mself[39m[38;5;241m.[39m_run_with_timing(run, nruns)
[0;32m    832[0m         [38;5;28;01melse[39;00m:
[0;32m    833[0m             [38;5;66;03m# regular execution[39;00m
[1;32m--> 834[0m             run()
[0;32m    836[0m [38;5;28;01mif[39;00m [38;5;124m'[39m[38;5;124mi[39m[38;5;124m'[39m [38;5;129;01min[39;00m opts:
[0;32m    837[0m     [38;5;28mself[39m[38;5;241m.[39mshell[38;5;241m.[39muser_ns[[38;5;124m'[39m[38;5;124m__name__[39m[38;5;124m'[39m] [38;5;241m=[39m __name__save

File [1;32mC:\ProgramData\anaconda3\Lib\site-packages\IPython\core\magics\execution.py:819[0m, in [0;36mExecutionMagics.run.<locals>.run[1;34m()[0m
[0;32m    818[0m [38;5;28;01mdef[39;00m [38;5;21mrun[39m():
[1;32m--> 819[0m     runner(filename, prog_ns, prog_ns,
[0;32m    820[0m             exit_ignore[38;5;241m=[39mexit_ignore)

File [1;32mC:\ProgramData\anaconda3\Lib\site-packages\IPython\core\interactiveshell.py:2880[0m, in [0;36mInteractiveShell.safe_execfile[1;34m(self, fname, exit_ignore, raise_exceptions, shell_futures, *where)[0m
[0;32m   2878[0m             [38;5;28;01mraise[39;00m
[0;32m   2879[0m         [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m exit_ignore:
[1;32m-> 2880[0m             [38;5;28mself[39m[38;5;241m.[39mshowtraceback(exception_only[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[0;32m   2881[0m [38;5;28;01mexcept[39;00m:
[0;32m   2882[0m     [38;5;28;01mif[39;00m raise_exceptions:

File [1;32mC:\ProgramData\anaconda3\Lib\site-packages\IPython\core\interactiveshell.py:2092[0m, in [0;36mInteractiveShell.showtraceback[1;34m(self, exc_tuple, filename, tb_offset, exception_only, running_compiled_code)[0m
[0;32m   2089[0m [38;5;28;01mif[39;00m exception_only:
[0;32m   2090[0m     stb [38;5;241m=[39m [[38;5;124m'[39m[38;5;124mAn exception has occurred, use [39m[38;5;124m%[39m[38;5;124mtb to see [39m[38;5;124m'[39m
[0;32m   2091[0m            [38;5;124m'[39m[38;5;124mthe full traceback.[39m[38;5;130;01m\n[39;00m[38;5;124m'[39m]
[1;32m-> 2092[0m     stb[38;5;241m.[39mextend([38;5;28mself[39m[38;5;241m.[39mInteractiveTB[38;5;241m.[39mget_exception_only(etype,
[0;32m   2093[0m                                                      value))
[0;32m   2094[0m [38;5;28;01melse[39;00m:
[0;32m   2095[0m     [38;5;28;01mtry[39;00m:
[0;32m   2096[0m         [38;5;66;03m# Exception classes can customise their traceback - we[39;00m
[0;32m   2097[0m         [38;5;66;03m# use this in IPython.parallel for exceptions occurring[39;00m
[0;32m   2098[0m         [38;5;66;03m# in the engines. This should return a list of strings.[39;00m

File [1;32mC:\ProgramData\anaconda3\Lib\site-packages\IPython\core\ultratb.py:644[0m, in [0;36mListTB.get_exception_only[1;34m(self, etype, value)[0m
[0;32m    636[0m [38;5;28;01mdef[39;00m [38;5;21mget_exception_only[39m([38;5;28mself[39m, etype, value):
[0;32m    637[0m [38;5;250m    [39m[38;5;124;03m"""Only print the exception type and message, without a traceback.[39;00m
[0;32m    638[0m 
[0;32m    639[0m [38;5;124;03m    Parameters[39;00m
[1;32m   (...)[0m
[0;32m    642[0m [38;5;124;03m    value : exception value[39;00m
[0;32m    643[0m [38;5;124;03m    """[39;00m
[1;32m--> 644[0m     [38;5;28;01mreturn[39;00m ListTB[38;5;241m.[39mstructured_traceback([38;5;28mself[39m, etype, value)

File [1;32mC:\ProgramData\anaconda3\Lib\site-packages\IPython\core\ultratb.py:511[0m, in [0;36mListTB.structured_traceback[1;34m(self, etype, evalue, etb, tb_offset, context)[0m
[0;32m    508[0m     chained_exc_ids[38;5;241m.[39madd([38;5;28mid[39m(exception[[38;5;241m1[39m]))
[0;32m    509[0m     chained_exceptions_tb_offset [38;5;241m=[39m [38;5;241m0[39m
[0;32m    510[0m     out_list [38;5;241m=[39m (
[1;32m--> 511[0m         [38;5;28mself[39m[38;5;241m.[39mstructured_traceback(
[0;32m    512[0m             etype, evalue, (etb, chained_exc_ids),
[0;32m    513[0m             chained_exceptions_tb_offset, context)
[0;32m    514[0m         [38;5;241m+[39m chained_exception_message
[0;32m    515[0m         [38;5;241m+[39m out_list)
[0;32m    517[0m [38;5;28;01mreturn[39;00m out_list

File [1;32mC:\ProgramData\anaconda3\Lib\site-packages\IPython\core\ultratb.py:1310[0m, in [0;36mAutoFormattedTB.structured_traceback[1;34m(self, etype, value, tb, tb_offset, number_of_lines_of_context)[0m
[0;32m   1308[0m [38;5;28;01melse[39;00m:
[0;32m   1309[0m     [38;5;28mself[39m[38;5;241m.[39mtb [38;5;241m=[39m tb
[1;32m-> 1310[0m [38;5;28;01mreturn[39;00m FormattedTB[38;5;241m.[39mstructured_traceback(
[0;32m   1311[0m     [38;5;28mself[39m, etype, value, tb, tb_offset, number_of_lines_of_context)

File [1;32mC:\ProgramData\anaconda3\Lib\site-packages\IPython\core\ultratb.py:1199[0m, in [0;36mFormattedTB.structured_traceback[1;34m(self, etype, value, tb, tb_offset, number_of_lines_of_context)[0m
[0;32m   1196[0m mode [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mmode
[0;32m   1197[0m [38;5;28;01mif[39;00m mode [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mverbose_modes:
[0;32m   1198[0m     [38;5;66;03m# Verbose modes need a full traceback[39;00m
[1;32m-> 1199[0m     [38;5;28;01mreturn[39;00m VerboseTB[38;5;241m.[39mstructured_traceback(
[0;32m   1200[0m         [38;5;28mself[39m, etype, value, tb, tb_offset, number_of_lines_of_context
[0;32m   1201[0m     )
[0;32m   1202[0m [38;5;28;01melif[39;00m mode [38;5;241m==[39m [38;5;124m'[39m[38;5;124mMinimal[39m[38;5;124m'[39m:
[0;32m   1203[0m     [38;5;28;01mreturn[39;00m ListTB[38;5;241m.[39mget_exception_only([38;5;28mself[39m, etype, value)

File [1;32mC:\ProgramData\anaconda3\Lib\site-packages\IPython\core\ultratb.py:1052[0m, in [0;36mVerboseTB.structured_traceback[1;34m(self, etype, evalue, etb, tb_offset, number_of_lines_of_context)[0m
[0;32m   1043[0m [38;5;28;01mdef[39;00m [38;5;21mstructured_traceback[39m(
[0;32m   1044[0m     [38;5;28mself[39m,
[0;32m   1045[0m     etype: [38;5;28mtype[39m,
[1;32m   (...)[0m
[0;32m   1049[0m     number_of_lines_of_context: [38;5;28mint[39m [38;5;241m=[39m [38;5;241m5[39m,
[0;32m   1050[0m ):
[0;32m   1051[0m [38;5;250m    [39m[38;5;124;03m"""Return a nice text document describing the traceback."""[39;00m
[1;32m-> 1052[0m     formatted_exception [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mformat_exception_as_a_whole(etype, evalue, etb, number_of_lines_of_context,
[0;32m   1053[0m                                                            tb_offset)
[0;32m   1055[0m     colors [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mColors  [38;5;66;03m# just a shorthand + quicker name lookup[39;00m
[0;32m   1056[0m     colorsnormal [38;5;241m=[39m colors[38;5;241m.[39mNormal  [38;5;66;03m# used a lot[39;00m

File [1;32mC:\ProgramData\anaconda3\Lib\site-packages\IPython\core\ultratb.py:953[0m, in [0;36mVerboseTB.format_exception_as_a_whole[1;34m(self, etype, evalue, etb, number_of_lines_of_context, tb_offset)[0m
[0;32m    950[0m [38;5;28;01massert[39;00m [38;5;28misinstance[39m(tb_offset, [38;5;28mint[39m)
[0;32m    951[0m head [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mprepare_header(etype, [38;5;28mself[39m[38;5;241m.[39mlong_header)
[0;32m    952[0m records [38;5;241m=[39m (
[1;32m--> 953[0m     [38;5;28mself[39m[38;5;241m.[39mget_records(etb, number_of_lines_of_context, tb_offset) [38;5;28;01mif[39;00m etb [38;5;28;01melse[39;00m []
[0;32m    954[0m )
[0;32m    956[0m frames [38;5;241m=[39m []
[0;32m    957[0m skipped [38;5;241m=[39m [38;5;241m0[39m

File [1;32mC:\ProgramData\anaconda3\Lib\site-packages\IPython\core\ultratb.py:1021[0m, in [0;36mVerboseTB.get_records[1;34m(self, etb, number_of_lines_of_context, tb_offset)[0m
[0;32m   1019[0m [38;5;28;01mwhile[39;00m cf [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m   1020[0m     [38;5;28;01mtry[39;00m:
[1;32m-> 1021[0m         source_file [38;5;241m=[39m inspect[38;5;241m.[39mgetsourcefile(etb[38;5;241m.[39mtb_frame)
[0;32m   1022[0m         lines, first [38;5;241m=[39m inspect[38;5;241m.[39mgetsourcelines(etb[38;5;241m.[39mtb_frame)
[0;32m   1023[0m     [38;5;28;01mexcept[39;00m [38;5;167;01mOSError[39;00m:

[1;31mAttributeError[0m: 'tuple' object has no attribute 'tb_frame'
AttributeError: 'tuple' object has no attribute 'tb_frame'

